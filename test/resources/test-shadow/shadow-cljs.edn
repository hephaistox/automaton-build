;; This file is used only to test the shadow-cljs namespace
{:nrepl {:port 8777}
 :jvm-opts ["-Xmx1G"
            "-Dclojure.tools.logging.factory=clojure.tools.logging.impl/log4j2-factory"]
 :source-paths ["src/cljs" "src/cljc" "resources" "test/cljs" "test/cljc" "../automaton/automaton-web/src/cljs" "../automaton/automaton-web/src/cljc" "../automaton/automaton-web/resources" "../automaton/automaton-web/test/cljc" "../automaton/automaton-web/test/cljs"]

 :dependencies [[reagent/reagent "1.2.0"]
                ;; Clojurescript version is inserted by default by shadow
                [mount/mount "0.1.17"]
                [com.taoensso/tempura "1.5.3"]
                [re-frame/re-frame "1.3.0"]
                [metosin/reitit "0.7.0-alpha5"]
                [com.taoensso/sente "1.17.0"]
                [devcards/devcards "0.2.7"]
                [clj-commons/pushy "0.3.10"]
                [day8.re-frame/http-fx "0.2.4"]
                [com.andrewmcveigh/cljs-time "0.5.2"]
                [day8.re-frame/re-frame-10x "1.7.0"]
                [re-frisk-remote/re-frisk-remote "1.6.0"]
                [day8.re-frame/tracing "0.6.2"]
                [cljsjs/highlight "11.7.0-0"]]

 :devDependencies [[cider/cider-nrepl "0.31.0"]
                   [binaryage/devtools "1.0.7"]]

 :dev-http {8080 ["resources/public"]
            8081 ["target/browser-test"]}

 :builds {:app {:target     :browser
                :output-dir "resources/public/js/compiled"
                :asset-path "/js/compiled"
                :compiler-options {:infer-externs :auto
                                   :optimizations :advanced}
                :modules {:share {:entries []}
                          :core {:init-fn landing.core/init!
                                 :depends-on #{:share}}}

                :build-options {:ns-aliases {devcards-marked cljsjs.marked
                                             devcards-syntax-highlighter cljsjs.highlight}}
                :devtools {:preloads [day8.re-frame-10x.preload
                                      re-frisk-remote.preload]
                           :after-load landing.core/init!
                           :repl-pprint true}
                :dev {:compiler-options {:closure-defines {re-frame.trace.trace-enabled? true
                                                           day8.re-frame.tracing.trace-enabled? true}
                                         :devcards true}
                      :modules {:devcards {:init-fn automaton-web.devcards.core/init
                                           :entries [automaton-web.devcards.core]
                                           :depends-on #{:share}}}}
                :release {:build-options {:ns-aliases {day8.re-frame.tracing day8.re-frame.tracing-stubs}
                                          :cache-level :off}
                          :compiler-options {:devcards false}}}
          :browser-test {:target    :browser-test
                         :ns-regexp "-test$"
                         :runner-ns shadow.test.browser
                         :test-dir  "target/browser-test"}
          :karma-test {:target    :karma
                       :ns-regexp "-test$"
                       :output-to "target/karma-test.js"}}}
